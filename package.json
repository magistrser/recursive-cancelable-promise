{
  "name": "recursive-cancelable-promise",
  "version": "1.0.1",
  "description": "A CancelablePromise with the ability to stop a CancelablePromise created in a CancelablePromise",
  "main": "lib/index.js",
  "types": "lib/index.d.ts",
  "repository": "https://github.com/magistrser/recursive-cancelable-promise.git",
  "keywords": ["promise", "promises", "async", "await", "cancelable", "abortable", "abort", "recursive", "controlable", "result", "safe", "task", "future", "subscription"],
  "author": "Sergey Frantsishkov <mgistrser@gmail.com>",
  "license": "MIT",
  "files": ["lib/**/*"],
  "scripts": {
    "test": "yarn link && yarn link \"recursive-cancelable-promise\" && jest --config jestconfig.json",
    "build": "tsc",
    "format": "prettier --write \"src/**/*.ts\" \"tests/**/*.ts\"",
    "lint": "tslint -p tsconfig.json"
  },
  "devDependencies": {
    "@types/jest": "^26.0.20",
    "cancelable-promise": "^3.2.3",
    "jest": "^26.6.3",
    "prettier": "^2.2.1",
    "ts-jest": "^26.5.2",
    "tslint": "^6.1.3",
    "tslint-config-prettier": "^1.18.0",
    "typescript": "^4.2.2"
  }
}
